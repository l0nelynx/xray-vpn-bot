stages:
  - build
  - deploy

variables:
  DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  COMPOSE_PROJECT_NAME: cheezy-vpn-bot

build-image:
  stage: build
  image: docker:24.0
  services:
    - docker:24.0-dind
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $DOCKER_IMAGE .
    - docker push $DOCKER_IMAGE

deploy-production:
  stage: deploy
  image: ubuntu:22.04
  only:
    - main  # Замените на вашу основную ветку
  before_script:
    - apt-get update -qq && apt-get install -y -qq openssh-client rsync
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan $SSH_SERVER >> ~/.ssh/known_hosts
  script:
    - ssh $SSH_USER@$SSH_SERVER "
      docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY &&
      docker pull $DOCKER_IMAGE &&
      docker stop $COMPOSE_PROJECT_NAME || true &&
      docker rm $COMPOSE_PROJECT_NAME || true &&
      docker run -d --name $COMPOSE_PROJECT_NAME \
      -e TELEGRAM_TOKEN=$TELEGRAM_TOKEN \
      -e OTHER_ENV_VARS=your_values \
      --restart=always \
      $DOCKER_IMAGE
      "