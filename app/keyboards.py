from aiogram.types import InlineKeyboardButton, WebAppInfo, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.filters.callback_data import CallbackData

from typing import Callable, Dict

from app.settings import secrets
from app.tariffs import tariffs_stars, tariffs_crypto, tariffs_sbp

# from app.utils import discount

price_stars = secrets.get('stars_price')
price_crypto = secrets.get('crypto_price')
price_discount = secrets.get('discount')
sbp_price = secrets.get('sbp_price')


class PaymentCallbackData(CallbackData, prefix=""):
    tag: str
    method: str
    amount: int
    days: int


def payment_keyboard(amount):
    builder = InlineKeyboardBuilder()
    builder.button(text=f"–û–ø–ª–∞—Ç–∏—Ç—å {amount} ‚≠êÔ∏è", pay=True)
    return builder.as_markup()


class TariffKeyboardBuilder:
    def __init__(
            self,
            method: str,
            price: int,
            days: int,
            disc: int,
            currency: str,
            period: str,
            discount_func: Callable[[float, int], float] = None
    ):
        """
        –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—Å–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏ —Ç–∞—Ä–∏—Ñ–∞

        :param method: –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
        :param price: –¶–µ–Ω–∞ –∑–∞ –º–µ—Å—è—Ü
        :param days: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –≤ —Ç–∞—Ä–∏—Ñ–µ
        :param disc: –ü—Ä–æ—Ü–µ–Ω—Ç —Å–∫–∏–¥–∫–∏
        :param currency: –í–∞–ª—é—Ç–∞ (—Å–∏–º–≤–æ–ª)
        :param period: –û–ø–∏—Å–∞–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–∞
        :param discount_func: –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ —Å–∫–∏–¥–∫–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏–Ω–∏—é —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è)
        """
        self.method = method
        self.price = price
        self.days = days
        self.disc = disc
        self.currency = currency
        self.period = period
        self.discount_func = discount_func or self.default_discount

    @staticmethod
    def default_discount(amount: int, discount_percent: int) -> int:
        """–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ —Å–∫–∏–¥–∫–∏"""
        return round(amount * (1 - discount_percent / 100))

    def calculate_amount(self) -> int:
        """–†–∞—Å—Å—á–µ—Ç –∏—Ç–æ–≥–æ–≤–æ–π —Å—É–º–º—ã —Å —É—á–µ—Ç–æ–º —Å–∫–∏–¥–∫–∏"""
        monthly_cost = round(self.price * (self.days / 30))
        print(monthly_cost)
        return self.discount_func(monthly_cost, self.disc)

    def build(self) -> InlineKeyboardButton:
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —Å —Ç–∞—Ä–∏—Ñ–æ–º"""
        amount = self.calculate_amount()

        call_data = PaymentCallbackData(
            tag='data',
            method=self.method,
            amount=amount,
            days=self.days
        ).pack()

        # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–∞–ª—é—Ç—ã –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω—ã
        formatted_price = f"{amount:.2f}".rstrip('0').rstrip('.')
        text = f"üîí–ë–ï–ó–õ–ò–ú–ò–¢ - {self.period} | {formatted_price} {self.currency}"

        return InlineKeyboardButton(text=text, callback_data=call_data)


def create_tariff_keyboard(
        tariff: Dict[str, dict],
        method: str,
        base_price: int,
        discount_func: Callable[[float, int], float] = None
) -> InlineKeyboardMarkup:
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫ (–∫–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ - —Å–ø–∏—Å–æ–∫ –∏–∑ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–∏)
    keyboard = []

    for name, params in tariff.items():
        days = int(params['days'])
        disc = int(params['disc'])
        currency = params['currency']
        period = params['period']

        builder = TariffKeyboardBuilder(
            method=method,
            price=base_price,
            days=days,
            disc=disc,
            currency=currency,
            period=period,
            discount_func=discount_func
        )

        # –ö–∞–∂–¥–∞—è –∫–Ω–æ–ø–∫–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Å–ø–∏—Å–∫–µ = –æ—Ç–¥–µ–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
        keyboard.append([builder.build()])
    keyboard.append([InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data='Premium')])
    keyboard.append([InlineKeyboardButton(text='–ù–∞ –≥–ª–∞–≤–Ω—É—é', callback_data='Main')])

    return InlineKeyboardMarkup(inline_keyboard=keyboard)


paystars_button = InlineKeyboardButton(
    text="üîíTelegram Stars‚≠êÔ∏è",
    callback_data='Stars_Plans')

paycryptobot_button = InlineKeyboardButton(
    text="üîíCrypto‚≠êÔ∏è",
    callback_data='Crypto_Plans')

paysbp_button = InlineKeyboardButton(
    text="üîí–°–ë–ü‚≠êÔ∏è",
    callback_data='SBP_Plans')

to_pay_method_back = InlineKeyboardButton(
    text="–ù–∞–∑–∞–¥",
    callback_data='Premium')

premium_button = InlineKeyboardButton(
    text="üîí–ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ CheezeVPN Premium‚≠êÔ∏è",
    callback_data='Premium')

extend_button = InlineKeyboardButton(
    text="üîí–ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É Ô∏è",
    callback_data='Extend_Month')

status_button = InlineKeyboardButton(
    text="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–ø–∏—Å–∫–µ",
    callback_data='Sub_Info')

howto_button = InlineKeyboardButton(
    text="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ",
    callback_data='Others')

free_button = InlineKeyboardButton(
    text="–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –≤–µ—Ä—Å–∏—è",
    callback_data='Free')

android_button = InlineKeyboardButton(
    text="Android/IOS",
    callback_data='Android_Help')

ios_button = InlineKeyboardButton(
    text="IOS"
)
win_button = InlineKeyboardButton(
    text="Windows"
)
linux_button = InlineKeyboardButton(
    text="Linux"
)
to_main_button = InlineKeyboardButton(text='–ù–∞ –≥–ª–∞–≤–Ω—É—é', callback_data='Main')

agreement_button = InlineKeyboardButton(
    text="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ",
    callback_data='Agreement')

privacy_button = InlineKeyboardButton(
    text="–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏",
    callback_data='Privacy')

# –°–æ–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
main_new = InlineKeyboardMarkup(inline_keyboard=[[premium_button],
                                                 [howto_button],
                                                 [free_button],
                                                 [agreement_button],
                                                 [privacy_button]])
main_pro = InlineKeyboardMarkup(inline_keyboard=[[extend_button],
                                                 [howto_button],
                                                 [status_button],
                                                 [agreement_button],
                                                 [privacy_button]])
main_free = InlineKeyboardMarkup(inline_keyboard=[[premium_button],
                                                  [howto_button],
                                                  [status_button],
                                                  [agreement_button],
                                                  [privacy_button]])

others = InlineKeyboardMarkup(inline_keyboard=[[android_button],
                                               # [ios_button],
                                               # [win_button],
                                               # [linux_button],
                                               [to_main_button]])
pay_methods = InlineKeyboardMarkup(inline_keyboard=[[paystars_button],
                                                    [paycryptobot_button],
                                                    # [paysbp_button],
                                                    [to_main_button]])

starspay_tariffs = create_tariff_keyboard(tariff=tariffs_stars, method='stars', base_price=price_stars)
cryptospay_tariffs = create_tariff_keyboard(tariff=tariffs_crypto, method='crypto', base_price=price_crypto)
sbp_tariffs = create_tariff_keyboard(tariff=tariffs_sbp, method='SBP', base_price=sbp_price)
sbp_apay_tariffs = create_tariff_keyboard(tariff=tariffs_sbp, method='SBP_APAY', base_price=sbp_price)
pay_extend_month = InlineKeyboardMarkup(inline_keyboard=[[extend_button],
                                                         [to_main_button]])
to_main = InlineKeyboardMarkup(inline_keyboard=[[to_main_button]])
agreement_menu = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç",
                          web_app=WebAppInfo(url=secrets.get('agreement_url'))
                          )], [to_main_button]])
policy_menu = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç",
                          web_app=WebAppInfo(url=secrets.get('policy_url'))
                          )], [to_main_button]])


def connect(link):
    # if link:
    #   v2raytun_url = f"v2raytun://import/{link[8:]}"
    #   redirect_url = f"{secrets.get('marz_url')}/go?url={v2raytun_url}"
    return InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ",
                                                                       # url=redirect_url,
                                                                       web_app=WebAppInfo(url=link)
                                                                       )],
                                                 [to_main_button]])
